{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rahul\\\\Work\\\\Dec\\\\10-12=2024\\\\Online-Assessment-Code-main\\\\frontend\\\\src\\\\page\\\\EditQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuestion = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // To access the question ID from the URL\n  const navigate = useNavigate(); // useNavigate instead of useHistory\n  const [question, setQuestion] = useState({\n    question_text: '',\n    options: [],\n    correct_option: '',\n    mark: 0,\n    negative_mark: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch the question data when the component mounts\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/editquestion/${id}/`) // Replace with the full URL if necessary\n    .then(response => response.json()).then(data => {\n      setQuestion(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Error fetching question data');\n      setLoading(false);\n    });\n  }, [id]);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'options') {\n      setQuestion(prevState => ({\n        ...prevState,\n        [name]: value.split(',').map(option => option.trim()) // Convert input into an array of options\n      }));\n    } else {\n      setQuestion(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Send the updated question data to the Django API\n    fetch(`http://localhost:8000/api/editquestion/${id}/`, {\n      // Full URL here\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(question)\n    }).then(response => response.json()).then(data => {\n      // On success, redirect back to the question list or some other page\n      navigate('/questions'); // Use navigate instead of history.push\n    }).catch(err => {\n      setError('Error updating question');\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question_text\",\n          value: question.question_text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Options (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"options\",\n          value: question.options.join(', '),\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Correct Option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"correct_option\",\n          value: question.correct_option,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mark:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"mark\",\n          value: question.mark,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Negative Mark:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"negative_mark\",\n          value: question.negative_mark,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(EditQuestion, \"n8LB5huRLARy3xDV9N/8u/jy/hs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditQuestion;\nexport default EditQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditQuestion\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditQuestion","_s","id","navigate","question","setQuestion","question_text","options","correct_option","mark","negative_mark","loading","setLoading","error","setError","fetch","then","response","json","data","catch","err","handleChange","e","name","value","target","prevState","split","map","option","trim","handleSubmit","preventDefault","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","join","_c","$RefreshReg$"],"sources":["D:/Rahul/Work/Dec/10-12=2024/Online-Assessment-Code-main/frontend/src/page/EditQuestion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst EditQuestion = () => {\r\n  const { id } = useParams();  // To access the question ID from the URL\r\n  const navigate = useNavigate();  // useNavigate instead of useHistory\r\n  const [question, setQuestion] = useState({\r\n    question_text: '',\r\n    options: [],\r\n    correct_option: '',\r\n    mark: 0,\r\n    negative_mark: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch the question data when the component mounts\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8000/api/editquestion/${id}/`)  // Replace with the full URL if necessary\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setQuestion(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Error fetching question data');\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'options') {\r\n      setQuestion((prevState) => ({\r\n        ...prevState,\r\n        [name]: value.split(',').map(option => option.trim()), // Convert input into an array of options\r\n      }));\r\n    } else {\r\n      setQuestion((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Send the updated question data to the Django API\r\n    fetch(`http://localhost:8000/api/editquestion/${id}/`, { // Full URL here\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(question),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // On success, redirect back to the question list or some other page\r\n        navigate('/questions');  // Use navigate instead of history.push\r\n      })\r\n      .catch(err => {\r\n        setError('Error updating question');\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Question</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Question Text:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question_text\"\r\n            value={question.question_text}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Options (comma separated):</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"options\"\r\n            value={question.options.join(', ')}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Correct Option:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"correct_option\"\r\n            value={question.correct_option}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Mark:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"mark\"\r\n            value={question.mark}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Negative Mark:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"negative_mark\"\r\n            value={question.negative_mark}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}