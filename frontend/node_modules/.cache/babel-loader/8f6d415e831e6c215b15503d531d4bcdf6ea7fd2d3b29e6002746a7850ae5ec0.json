{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Online-Assessment-Code\\\\frontend\\\\src\\\\page\\\\EditQuestion.jsx\",\n  _s = $RefreshSig$();\n// editquestion.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditQuestion = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n\n  // Retrieve questions from localStorage when the component mounts\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || [];\n    setQuestions(storedQuestions);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Questions Added:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"question-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"options-list\",\n            children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"option-item\",\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Correct Option:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), \" \", question.correctOption]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mark:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), \" \", question.mark]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Negative Mark:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), \" \", question.negativeMark]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(EditQuestion, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = EditQuestion;\nexport default EditQuestion;\nvar _c;\n$RefreshReg$(_c, \"EditQuestion\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EditQuestion","_s","questions","setQuestions","storedQuestions","JSON","parse","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","question","index","options","option","idx","correctOption","mark","negativeMark","_c","$RefreshReg$"],"sources":["C:/Users/student/Online-Assessment-Code/frontend/src/page/EditQuestion.jsx"],"sourcesContent":["// editquestion.jsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst EditQuestion = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    // Retrieve questions from localStorage when the component mounts\r\n    useEffect(() => {\r\n        const storedQuestions = JSON.parse(localStorage.getItem(\"questions\")) || [];\r\n        setQuestions(storedQuestions);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Edit Questions</h3>\r\n\r\n            {/* Display questions stored in the session */}\r\n            {questions.length > 0 ? (\r\n                <div className=\"questions-container\">\r\n                    <h3>Questions Added:</h3>\r\n                    <ul>\r\n                        {questions.map((question, index) => (\r\n                            <li key={index} className=\"question-item\">\r\n                                <h4>{question.question}</h4>\r\n                                <ul className=\"options-list\">\r\n                                    {question.options.map((option, idx) => (\r\n                                        <li key={idx} className=\"option-item\">\r\n                                            {option}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <p>\r\n                                    <strong>Correct Option:</strong>{\" \"}\r\n                                    {question.correctOption}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Mark:</strong> {question.mark}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Negative Mark:</strong>{\" \"}\r\n                                    {question.negativeMark}\r\n                                </p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ) : (\r\n                <p>No questions added yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}